<?php

namespace App\Traits;

use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;

trait FileUploadTrait
{
    /**
     * Upload file ke path yang ditentukan (private, public, temp, sharing).
     */
    public function uploadFile(UploadedFile $file, string $type = 'public', string $naming = 'default', array $context = []): string
    {
        $pathConfig = config("scribes.paths.{$type}");
        $namingStrategy = config("scribes.file_naming.{$naming}");

        if (!$namingStrategy || !is_callable($namingStrategy)) {
            throw new \InvalidArgumentException("❌ Naming strategy '{$naming}' tidak ditemukan.");
        }

        $filename = $namingStrategy($file, $context);

        $storedPath = $file->storeAs($pathConfig, $filename, ['disk' => 'local']);
        return $storedPath;
    }

    /**
     * Hapus file.
     */
    public function deleteFile(string $path): bool
    {
        return Storage::disk('local')->delete($path);
    }

    /**
     * Ambil URL file (kalau public).
     */
    public function getFileUrl(string $path, string $type = 'public'): ?string
    {
        if ($type !== 'public') {
            return null; // selain public biasanya gak ada direct URL
        }

        return Storage::disk('local')->url($path);
    }
}
